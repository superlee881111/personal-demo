<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>demo</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>demo-8005</module>
        <module>demo-8006</module>
        <module>micro-service-cloud-common-api</module>
    </modules>

    <name>demo</name>
    <description>development platform</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <lombok.version>1.18.32</lombok.version>
        <slf4j-api.version>1.7.28</slf4j-api.version>
        <junit.version>4.12</junit.version>
        <druid.version>1.2.22</druid.version>
        <postgresql.version>42.7.3</postgresql.version>
        <fastjson.version>2.0.51</fastjson.version>
        <mybatis-spring-boot-starter>2.3.2</mybatis-spring-boot-starter>
        <mybatis-plus.version>3.3.0</mybatis-plus.version>
        <velocity-engine-core>2.3</velocity-engine-core>
        <swagger-annotations>2.0.0-rc2</swagger-annotations>
        <spring.boot.admin>2.3.1</spring.boot.admin>
        <spring-cloud-starter-hystrix>1.4.7.RELEASE</spring-cloud-starter-hystrix>
        <spring-cloud-starter-netflix-hystrix-dashboard>2.2.10.RELEASE</spring-cloud-starter-netflix-hystrix-dashboard>
        <micro-service-cloud-common-api>1.0.0</micro-service-cloud-common-api>
        <minio.version>8.5.10</minio.version>
        <spring-boot-dependencies>2.3.12.RELEASE</spring-boot-dependencies>
        <spring-cloud-dependencies>Hoxton.SR12</spring-cloud-dependencies>
        <spring-cloud-alibaba-dependencies>2.2.9.RELEASE</spring-cloud-alibaba-dependencies>
        <spring-cloud-starter-alibaba-nacos>2.2.7.RELEASE</spring-cloud-starter-alibaba-nacos>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
<!--            <dependency>-->
<!--                <groupId>com.alibaba.cloud</groupId>-->
<!--                <artifactId>spring-cloud-alibaba-dependencies</artifactId>-->
<!--                <version>${spring-cloud-alibaba-dependencies}</version>-->
<!--                <type>pom</type>-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->
            <!--引入nacos 注册中心依赖-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${spring-cloud-starter-alibaba-nacos}</version>
            </dependency>
            <!--引入nacos config配置依赖-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                <version>${spring-cloud-starter-alibaba-nacos}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!--mybatis-plus 逆向生成-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity-engine-core}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/io.swagger/swagger-annotations -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-hystrix</artifactId>
                <version>${spring-cloud-starter-hystrix}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
                <version>${spring-cloud-starter-netflix-hystrix-dashboard}</version>
            </dependency>
            <dependency>
                <groupId>org.example</groupId>
                <artifactId>micro-service-cloud-common-api</artifactId>
                <version>${micro-service-cloud-common-api}</version>
            </dependency>
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.squareup.okhttp3</groupId>
                        <artifactId>okhttp</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>4.12.0</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.16.1</version>
            </dependency>

            <!--json解析-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring.boot.admin}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui</artifactId>
                <version>${spring.boot.admin}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring.boot.admin}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>local</id>
            <properties>
                <spring.active>local</spring.active>
            </properties>
        </profile>
        <profile>
            <id>docker</id>
            <properties>
                <spring.active>docker</spring.active>
            </properties>
        </profile>
        <profile>
            <id>product</id>
            <properties>
                <spring.active>product</spring.active>
            </properties>
        </profile>
    </profiles>

    <build>
        <finalName>demo</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
<!--            <plugins>-->
<!--                <plugin>-->
<!--                    <groupId>org.apache.maven.plugins</groupId>-->
<!--                    <artifactId>maven-assembly-plugin</artifactId>-->

<!--                    <executions>-->
<!--                        <execution>-->
<!--                            <phase>package</phase>-->
<!--                            <goals>-->
<!--                                <goal>single</goal>-->
<!--                            </goals>-->
<!--                        </execution>-->
<!--                    </executions>-->
<!--                    <configuration>-->
<!--                        <archive>-->
<!--                            <manifest>-->
<!--                                <mainClass>org.example.*</mainClass>-->
<!--                            </manifest>-->
<!--                        </archive>-->
<!--                        <descriptorRefs>-->
<!--                            <descriptorRef>jar-with-dependencies</descriptorRef>-->
<!--                        </descriptorRefs>-->
<!--                    </configuration>-->
<!--                </plugin>-->
<!--            </plugins>-->
        </pluginManagement>
    </build>
</project>
